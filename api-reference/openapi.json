{
  "openapi": "3.0.1",
  "info": {
    "title": "Tax Engine API",
    "description": "All of the endpoints",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://staging.api.numeralhq.com/"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/tax/calculations": {
      "post": {
        "description": "For a given product (`reference_product_id`) and address destination, it returns the applicable taxes. The `calculation_id` that is returned will be **required** to create a `transaction`.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Calculate response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalculationResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tax/transactions": {
      "post": {
        "description": "Once an order/transaction is placed, use this endpoint to create a `transaction`. This will be used to calculate taxes for the order/transaction.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Calculate response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tax/refunds": {
      "post": {
        "description": "When a previously completed transaction is refunded, you'll need to create a refund object.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Refund response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tax/refund_reversals": {
      "post": {
        "description": "If a refund is issued for a transaction, you can reverse the refund by creating a 'refund reversal' object. This creates an exact opposite of the original refund.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refund_id": {
                    "type": "string",
                    "description": "The ID of the refund to reverse.",
                    "example": "ref_tr_123456789"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Refund response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tax/transaction/{transaction_id}": {
      "get": {
        "description": "Retrieve the details of a specific transaction using its ID.",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the transaction to retrieve.",
            "example": "tr_172175669911564a621fc-ab56-441b-959f-7b2587cc72f2"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a specific transaction using its ID.",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the transaction to delete.",
            "example": "tr_1721782517712b5926847-d313-4721-9ee2-f8bde575d80b"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction deletion response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tax/product/{reference_product_id}": {
      "get": {
        "description": "Retrieve the details of a specific product using its ID.",
        "parameters": [
          {
            "name": "reference_product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the product to retrieve.",
            "example": "p-20506"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a specific product using its id.",
        "parameters": [
          {
            "name": "reference_product_ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the product to delete.",
            "example": "p-309"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deletion response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tax/products": {
      "get": {
        "description": "Retrieve the list of all products.",
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                },
                "examples": {
                  "multipleProducts": {
                    "summary": "Multiple products example",
                    "value": [
                      {
                        "request_id": "req_172175669911564a621fc-ab56-441b-959f-7b2587cc72f2",
                        "object": "tax.product",
                        "reference_product_id": "p-20506",
                        "reference_product_name": "Red Shoes",
                        "product_category": "GENERAL_MERCHANDISE",
                        "created_at": 1721694425,
                        "updated_at": 1721694425,
                        "testmode": false
                      },
                      {
                        "request_id": "req_172175669911564a621fc-ab56-441b-959f-7b2587cc72f2",
                        "object": "tax.product",
                        "reference_product_id": "p-20507",
                        "reference_product_name": "Cell Phone",
                        "product_category": "GENERAL_MERCHANDISE",
                        "created_at": 1721694545,
                        "updated_at": 1721694545,
                        "testmode": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new product. By creating a product using a `reference_product_id` you tell numeral how to categorize each of the items you sell. You will reference this `reference_product_id` when [calculating taxes](/api-reference/endpoint/calculations). **It is required to create a product before you can calculate taxes against it**",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TransactionRequest": {
        "type": "object",
        "properties": {
          "calculation_id": {
            "type": "string",
            "description": "The ID of the calculation that was used to create this transaction. We will pull sales data about the transaction from the original `calculation` object.",
            "example": "calc_123456789"
          },
          "reference_order_id": {
            "type": "string",
            "description": "This is the ID of this order in your system. We'll use this ID for reconciliation and reporting",
            "example": "343-45836"
          },
          "reference_payment_id": {
            "type": "string",
            "description": "If there is a single payment associated with this order, providing the `reference_payment_id` will help with currency exchange reconciliation.",
            "example": "pay_123456789"
          },
          "transaction_processed_at": {
            "type": "number",
            "description": "Epoc datetime representing the date and time the transaction was made.",
            "example": 1714787673
          }
        },
        "required": [
          "calculation_id",
          "reference_order_id",
          "transaction_processed_at"
        ]
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The request ID of the create request.",
            "example": "req_1721782604158421ac581-3dc8-4879-a7ad-670eebee81e0"
          },
          "transaction_id": {
            "type": "string",
            "description": "The ID of the transaction. If you need to refund this transaction, you will be required to reference this id.",
            "example": "tr_123456789"
          },
          "object": {
            "type": "string",
            "description": "The type of object: `tax.transaction`.",
            "example": "tax.transaction"
          },
          "calculation_id": {
            "type": "string",
            "description": "The ID of the calculation that was used to create this transaction. We will pull sales data about the transaction from the original `calculation` object.",
            "example": "calc_123456789"
          },
          "reference_order_id": {
            "type": "string",
            "description": "This is the ID of this order in your system. We'll use this ID for reconciliation and reporting",
            "example": "343-45836"
          },
          "reference_payment_id": {
            "type": "string",
            "description": "If there is a single payment associated with this order, providing the `reference_payment_id` will help with currency exchange reconciliation.",
            "example": "pay_123456789"
          },
          "transaction_processed_at": {
            "type": "number",
            "description": "Epoc datetime representing the date and time the transaction was made.",
            "example": 1714787673
          },
          "customer_currency_code": {
            "type": "string",
            "description": "The currency code of the transaction.",
            "example": "EUR"
          },
          "filing_currency_code": {
            "type": "string",
            "description": "The currency code of the filing that will be used to remit taxes collected on this transaction.",
            "example": "EUR"
          },
          "functional_currency_code": {
            "type": "string",
            "description": "The currency code of the that will be used to report on and display this transaction in all dashboard views.",
            "example": "EUR"
          },
          "testmode": {
            "type": "boolean",
            "description": "This will be either `true` or `false`.",
            "example": "false"
          }
        }
      },
      "RefundResponse": {
        "type": "object",
        "properties": {
          "refund_id": {
            "type": "string",
            "description": "The ID of the refund. If you need to `reverse` this refund, you will be required to reference this id.",
            "example": "ref_tr_123456789"
          },
          "object": {
            "type": "string",
            "description": "The type of object: `tax.refund`.",
            "example": "tax.refund"
          },
          "refund_type": {
            "type": "string",
            "description": "This will be either `'full'` or `'partial'`.",
            "example": "full"
          },
          "testmode": {
            "type": "boolean",
            "description": "This will be either `true` or `false`.",
            "example": "false"
          },
          "refund_processed_at": {
            "type": "number",
            "description": "Epoc datetime representing the date and time the refund was made.",
            "example": 1714787673
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundTransactionLineItem"
            }
          }
        }
      },
      "RefundRequest": {
        "type": "object",
        "properties": {
          "transaction_id": {
            "type": "string",
            "description": "The ID of the transaction to refund. This is the `transaction_id` returned from the `/transactions` creation call.",
            "example": "tr_123456789"
          },
          "type": {
            "type": "string",
            "description": "This will be either `'full'` or `'partial'`. If `type='partial'`, you must also provide the line item(s) you wish to apply refunds against",
            "example": "full"
          },
          "refund_processed_at": {
            "type": "number",
            "description": "Epoc datetime representing the date and time the refund was made.",
            "example": 1714787673
          },
          "line_items": {
            "type": "array",
            "description": "If the refund is `type=partial`, you must provide the line item(s) you wish to apply refunds against. You must provide **one of** `product_id` OR `line_item_id`, so that we can identify the specific line item(s) to apply refunds against.",
            "example": [
              {
                "line_item_id": "line_123456789",
                "reference_product_id": "p-1233543",
                "sale_amount_refunded": -1000,
                "tax_amount_refunded": -100
              }
            ]
          }
        },
        "required": ["transaction_id", "type", "refund_processed_at"]
      },
      "CalculationRequest": {
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/CustomerDetails"
          },
          "origin_address": {
            "description": "The address of a product's shipping origin. This is the address of the warehouse or inventory that holds the product and where it is shipped from. **This is not required**",
            "$ref": "#/components/schemas/Address"
          },
          "transaction": {
            "$ref": "#/components/schemas/TransactionDetails"
          }
        },
        "required": ["customer", "transaction"]
      },
      "CustomerDetails": {
        "type": "object",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "type": "object",
                "properties": {
                  "address_type": {
                    "type": "string",
                    "description": "The type of address. Must be one of: `shipping`, `billing`.",
                    "example": "shipping"
                  }
                },
                "required": ["destination_type"]
              }
            ]
          }
        }
      },
      "TransactionDetails": {
        "type": "object",
        "properties": {
          "customer_currency_code": {
            "type": "string",
            "description": "The currency code of the transaction. Must be one of: EUR, RON, PLN, DKK, HUF, CZK, BGN, SEK",
            "example": "EUR"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          }
        },
        "required": ["customer_currency_code", "line_items"]
      },
      "Address": {
        "type": "object",
        "properties": {
          "address_line_1": {
            "type": "string",
            "example": "3990 N County Rd 300 E"
          },
          "address_line_2": {
            "type": "string",
            "example": ""
          },
          "address_city": {
            "type": "string",
            "example": "Danville"
          },
          "address_province": {
            "type": "string",
            "example": "IN"
          },
          "address_postal_code": {
            "type": "string",
            "example": "46122"
          },
          "address_country": {
            "type": "string",
            "description": "The country code of the transaction. Must be a valid ISO 3166-1 alpha-2 country code.",
            "example": "US"
          }
        },
        "required": [
          "address_line_1",
          "address_city",
          "address_province",
          "address_postal_code",
          "address_country"
        ]
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "line_item_id": {
            "type": "string",
            "description": "The ID of the line item from your system. This will be used to reference this line item for refunds if necessary. This field is optional and will be primarily used for your record keeping.",
            "example": "line_123456789"
          },
          "reference_product_id": {
            "type": "string",
            "description": "The product ID is used to uniquely reference this product in **your** system as well as the Numeral categorization taxonomy. This ID will be used to determine which tax category to apply.",
            "example": "p-1233543"
          },
          "tax_included_in_amount": {
            "type": "boolean",
            "description": "Is the tax included in the amount?",
            "example": true
          },
          "amount": {
            "type": "number",
            "description": "The base price of this line item. If there are more than 1 unit of this product being sold, combine the prices.",
            "example": 200
          }
        },
        "required": [
          "reference_product_id",
          "tax_included_in_amount",
          "amount"
        ]
      },
      "CalculationResponse": {
        "type": "object",
        "properties": {
          "calculation_id": {
            "type": "string",
            "description": "The ID of the calculation. This will be used to create a `transaction`.",
            "example": "calc_123456789"
          },
          "object": {
            "type": "string",
            "description": "The type of object: `tax.calculation`.",
            "example": "tax.calculation"
          },
          "formatted_address": {
            "type": "string",
            "description": "The formatted address of the transaction.",
            "example": "3990 N County Rd 300 E, Danville, IN 46122, USA"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionLineItem"
            }
          },
          "total_tax_amount": {
            "type": "number",
            "example": 14.5
          },
          "total_amount_excluding_tax": {
            "type": "number",
            "example": 200
          },
          "total_amount_including_tax": {
            "type": "number",
            "example": 214.5
          },
          "expires_at": {
            "type": "number",
            "description": "Epoc datetime representing the date and time the tax rates are valid until.",
            "example": 1714787673
          },
          "testmode": {
            "type": "boolean",
            "description": "This will be either `true` or `false`.",
            "example": "false"
          }
        }
      },
      "TransactionLineItem": {
        "type": "object",
        "properties": {
          "line_item_id": {
            "type": "string",
            "example": "line_987654321"
          },
          "reference_product_id": {
            "type": "string",
            "example": "p-1233543"
          },
          "reference_product_name": {
            "type": "string",
            "example": "Widget"
          },
          "product_tax_code": {
            "type": "string",
            "example": "1234567890"
          },
          "tax_included_in_amount": {
            "type": "boolean",
            "example": true
          },
          "tax_jurisdictions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tax_rate": {
                  "type": "number",
                  "example": 0.07
                },
                "rate_type": {
                  "type": "string",
                  "example": "REDUCED_RATE"
                },
                "jurisdiction_name": {
                  "type": "string",
                  "example": "State"
                }
              },
              "nullable": true
            }
          },
          "tax_amount": {
            "type": "number",
            "format": "int32",
            "example": 14
          },
          "amount_excluding_tax": {
            "type": "number",
            "format": "int32",
            "example": 200
          },
          "amount_including_tax": {
            "type": "number",
            "format": "int32",
            "example": 214
          }
        }
      },
      "RefundTransactionLineItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TransactionLineItem"
          },
          {
            "type": "object",
            "properties": {
              "amount_including_tax": {
                "type": "number",
                "format": "int32",
                "example": -214,
                "description": "The amount including tax, which should be a negative number for refunds."
              },
              "amount_excluding_tax": {
                "type": "number",
                "format": "int32",
                "example": -200,
                "description": "The amount excluding tax, which should be a negative number for refunds."
              },
              "tax_amount": {
                "type": "number",
                "format": "int32",
                "example": -14,
                "description": "The tax amount, which should be a negative number for refunds."
              }
            }
          }
        ]
      },
      "ProductRequest": {
        "type": "object",
        "properties": {
          "reference_product_id": {
            "type": "string",
            "description": "The ID of the product.",
            "example": "p-123456789"
          },
          "reference_product_name": {
            "type": "string",
            "description": "The name of the product.",
            "example": "Red Shoes"
          },
          "product_category": {
            "type": "string",
            "description": "The category of the product.",
            "example": "CLOTHING"
          }
        },
        "required": ["reference_product_id", "reference_product_name", "product_category"]
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The request ID of the create request.",
            "example": "req_1721782604158421ac581-3dc8-4879-a7ad-670eebee81e0"
          },
          "object": {
            "type": "string",
            "description": "The type of object: `tax.product`.",
            "example": "tax.product"
          },
          "reference_product_id": {
            "type": "string",
            "description": "The ID of the product.",
            "example": "p-20506"
          },
          "reference_product_name": {
            "type": "string",
            "description": "The name of the product.",
            "example": "Red Shoes"
          },
          "product_category": {
            "type": "string",
            "description": "The category of the product.",
            "example": "CLOTHING"
          },
          "created_at": {
            "type": "number",
            "description": "Epoc datetime representing the date and time the product was created.",
            "example": 1721694425
          },
          "updated_at": {
            "type": "number",
            "description": "Epoc datetime representing the date and time the product was last updated.",
            "example": 1721694425
          },
          "testmode": {
            "type": "boolean",
            "description": "This will be either `true` or `false`.",
            "example": "true"
          }
        }
      },
      "DeleteTransactionResponse": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The request ID of the delete request.",
            "example": "req_1721782604158421ac581-3dc8-4879-a7ad-670eebee81e0"
          },
          "object": {
            "type": "string",
            "description": "The type of object deleted.",
            "example": "tax.transaction"
          },
          "deleted_at": {
            "type": "number",
            "description": "Epoc datetime representing the date and time the object was deleted.",
            "example": 1721782604
          }
        }
      },
      "DeleteProductResponse": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The request ID of the delete request.",
            "example": "req_1721782604158421ac581-3dc8-4879-a7ad-670eebee81e0"
          },
          "object": {
            "type": "string",
            "description": "The type of object deleted.",
            "example": "tax.product"
          },
          "deleted_at": {
            "type": "number",
            "description": "Epoc datetime representing the date and time the object was deleted.",
            "example": 1721782604
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "error_code": { "type": "string" },
                "error_message": { "type": "string" },
                "error_meta": {
                  "type": "object",
                  "properties": {
                    "field": { "type": "string" },
                    "expected": { "type": "string" },
                    "received": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "example": {
          "errors": [
            {
              "error_code": "missing_field",
              "error_message": "Field is required",
              "error_meta": {
                "field": "path.to.fieldname",
                "expected": "string",
                "received": "undefined"
              }
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
